{
  "theme": "kanagawa",
  "keybinds": {
    "leader": "ctrl+x",
    "app_help": "<leader>h",
    "app_exit": "ctrl+c,<leader>q",
    "editor_open": "<leader>e",
    "theme_list": "<leader>t",
    "project_init": "<leader>i",
    "tool_details": "<leader>d",
    "thinking_blocks": "<leader>b",
    "session_export": "<leader>x",
    "session_new": "<leader>n",
    "session_list": "<leader>l",
    "session_timeline": "<leader>g",
    "session_share": "<leader>s",
    "session_unshare": "none",
    "session_interrupt": "esc",
    "session_compact": "<leader>c",
    "session_child_cycle": "ctrl+]",
    "session_child_cycle_reverse": "ctrl+\\",
    "messages_page_up": "pgup",
    "messages_page_down": "pgdown",
    "messages_half_page_up": "ctrl+alt+u",
    "messages_half_page_down": "ctrl+alt+d",
    "messages_first": "ctrl+g",
    "messages_last": "ctrl+alt+g",
    "messages_copy": "<leader>y",
    "messages_undo": "<leader>u",
    "messages_redo": "<leader>r",
    "model_list": "<leader>m",
    "model_cycle_recent": "f2",
    "model_cycle_recent_reverse": "shift+f2",
    "agent_list": "<leader>a",
    "agent_cycle": "tab",
    "agent_cycle_reverse": "shift+tab",
    "input_clear": "ctrl+c",
    "input_paste": "ctrl+v",
    "input_submit": "enter",
    "input_newline": "shift+enter,ctrl+j",
    "switch_mode": "none",
    "switch_mode_reverse": "none",
    "switch_agent": "tab",
    "switch_agent_reverse": "shift+tab",
    "file_list": "none",
    "file_close": "none",
    "file_search": "none",
    "file_diff_toggle": "none",
    "messages_previous": "none",
    "messages_next": "none",
    "messages_layout_toggle": "none",
    "messages_revert": "none"
  },
  "tui": {
    "scroll_speed": 3
  },
  "share": "disabled",
  "autoupdate": true,
  "model": "opencode/grok-code",
  "small_model": "opencode/grok-code",
  "tools": {
    "context7*": true,
    "serena*": true,
    "figma*": true,
    "chrome*": true,
    "sequential-thinking*": true
  },
  "agent": {
    "build": {
      "model": "github-copilot/claude-sonnet-4",
      "temperature": 0.1,
      "description": "Primary agent for deep analysis, architecture decisions, and intelligent workflow orchestration with advanced reasoning capabilities",
      "mode": "primary",
      "prompt": "{file:./base-prompt.md}",
      "thinking": {
        "type": "enabled",
        "budget_tokens": 16000
      }
    },
    "gpt": {
      "model": "github-copilot/gpt-5",
      "temperature": 0.1,
      "description": "Autonomous daily development tasks with cross-platform compatibility",
      "mode": "primary",
      "prompt": "{file:./base-prompt.md}",
      "max_tokens": 2048
    }
  },
  "provider": {
    "github-copilot": {
      "models": {
        "gpt-5": {
          "options": {
            "reasoningEffort": "high",
            "textVerbosity": "low",
            "reasoningSummary": "auto",
            "include": ["reasoning.encrypted_content"]
          }
        },
        "gpt-5-mini": {
          "options": {
            "reasoningEffort": "medium",
            "textVerbosity": "low",
            "reasoningSummary": "auto",
            "include": ["reasoning.encrypted_content"]
          }
        },
        "claude-sonnet-4": {
          "options": {
            "thinking": {
              "type": "enabled",
              "budget_tokens": 16000
            }
          }
        },
        "grok-code-fast-1": {
          "name": "Grok Code Fast 1",
          "release_date": "2025-08-20",
          "attachment": false,
          "reasoning": true,
          "tool_call": true,
          "limit": {
            "context": 256000,
            "output": 32000
          }
        }
      }
    },
    "zai": {
      "npm": "@ai-sdk/anthropic",
      "options": {
        "baseURL": "https://api.z.ai/api/anthropic/v1"
      },
      "models": {
        "glm-4.5-flash": {
          "name": "GLM-4.5 Flash (FREE)"
        },
        "glm-4.5": {
          "name": "GLM-4.5 (Flagship)"
        },
        "glm-4.5-air": {
          "name": "GLM-4.5 Air (Lightweight)"
        }
      }
    },
    "z-ai": {
      "npm": "@ai-sdk/openai-compatible",
      "options": {
        "baseURL": "https://api.z.ai/api/coding/paas/v4"
      },
      "models": {
        "glm-4.5": {
          "name": "glm-4.5",
          "cost": {
            "input": 0,
            "output": 0,
            "cache_read": 0,
            "cache_write": 0
          },
          "limit": {
            "context": 128000,
            "output": 96000
          }
        }
      }
    }
  },
  "mcp": {
    "context7": {
      "type": "local",
      "command": ["npx", "-y", "@upstash/context7-mcp@latest"],
      "environment": {
        "DEFAULT_MINIMUM_TOKENS": "2000"
      },
      "enabled": true
    },
    "serena": {
      "type": "local",
      "command": [
        "uvx",
        "--from",
        "git+https://github.com/oraios/serena",
        "serena-mcp-server",
        "--context",
        "ide-assistant",
        "--project",
        "$(pwd)"
      ],
      "environment": {
        "SERENA_READ_ONLY": "true"
      },
      "enabled": true
    },
    "figma": {
      "type": "local",
      "command": [
        "npx",
        "-y",
        "figma-developer-mcp",
        "figd_1J7K1kkGLLaC8WGQTSd-I2KsbyIDj1ED3XfUqGBB",
        "--stdio"
      ],
      "environment": {
        "NODE_ENV": "production"
      },
      "enabled": true
    },
    "chrome": {
      "type": "local",
      "command": [
        "node",
        "/Users/killerkidbo/.nvm/versions/node/v22.14.0/lib/node_modules/mcp-chrome-bridge/dist/mcp/mcp-server-stdio.js"
      ],
      "enabled": true
    },
    "sequential-thinking": {
      "type": "local",
      "command": [
        "npx",
        "-y",
        "@modelcontextprotocol/server-sequential-thinking"
      ],
      "environment": {
        "DISABLE_THOUGHT_LOGGING": "false"
      },
      "enabled": true
    }
  },
  "formatter": {
    "prettier": {
      "command": ["npx", "prettier", "--write", "$FILE"],
      "extensions": [
        ".js",
        ".jsx",
        ".ts",
        ".tsx",
        ".html",
        ".css",
        ".scss",
        ".sass",
        ".md",
        ".json",
        ".yaml",
        ".yml"
      ]
    },
    "java-formatter": {
      "command": ["google-java-format", "--replace", "$FILE"],
      "environment": {
        "JAVA_HOME": "/Users/killerkidbo/.sdkman/candidates/java/current"
      },
      "extensions": [".java"]
    }
  },
  "lsp": {
    "typescript": {
      "command": ["typescript-language-server", "--stdio"],
      "extensions": [
        ".ts",
        ".tsx",
        ".js",
        ".jsx",
        ".mjs",
        ".cjs",
        ".mts",
        ".cts"
      ],
      "initialization": {
        "preferences": {
          "includeInlayParameterNameHints": "all",
          "includeInlayVariableTypeHints": true,
          "includeInlayFunctionParameterTypeHints": true,
          "includeInlayPropertyDeclarationTypeHints": true
        }
      }
    },
    "eslint": {
      "disabled": true
    },
    "lua": {
      "command": ["lua-language-server"],
      "extensions": [".lua"],
      "initialization": {
        "Lua": {
          "diagnostics": {
            "globals": [
              "vim",
              "use",
              "describe",
              "it",
              "assert",
              "before_each",
              "after_each"
            ]
          },
          "workspace": {
            "library": ["${3rd}/luv/library", "${3rd}/busted/library"],
            "checkThirdParty": false
          },
          "telemetry": {
            "enable": false
          },
          "hint": {
            "enable": true,
            "paramType": true,
            "setType": true
          }
        }
      }
    },
    "gopls": {
      "command": ["gopls", "serve"],
      "extensions": [".go", ".mod", ".sum"],
      "initialization": {
        "gofumpt": true,
        "staticcheck": true,
        "vulncheck": "Imports",
        "analyses": {
          "unusedparams": true,
          "shadow": true,
          "fieldalignment": true
        },
        "hints": {
          "assignVariableTypes": true,
          "compositeLiteralFields": true,
          "compositeLiteralTypes": true,
          "constantValues": true,
          "functionTypeParameters": true,
          "parameterNames": true,
          "rangeVariableTypes": true
        }
      }
    },
    "bash": {
      "command": ["bash-language-server", "start"],
      "extensions": [".sh", ".bash", ".zsh"],
      "initialization": {
        "bashIde": {
          "globPattern": "**/*@(.sh|.inc|.bash|.command|.zsh)"
        }
      }
    },
    "marksman": {
      "command": ["marksman", "server"],
      "extensions": [".md", ".markdown"],
      "initialization": {
        "marksman": {
          "toc": {
            "enable": true
          }
        }
      }
    },
    "json": {
      "command": ["vscode-json-language-server", "--stdio"],
      "extensions": [".json", ".jsonc"],
      "initialization": {
        "json": {
          "validate": {
            "enable": true
          },
          "format": {
            "enable": true
          }
        }
      }
    },
    "yaml": {
      "command": ["yaml-language-server", "--stdio"],
      "extensions": [".yaml", ".yml"],
      "initialization": {
        "yaml": {
          "validate": true,
          "hover": true,
          "completion": true,
          "format": {
            "enable": true,
            "singleQuote": false,
            "bracketSpacing": true
          },
          "schemas": {
            "https://json.schemastore.org/github-workflow.json": "/.github/workflows/*",
            "https://json.schemastore.org/pre-commit-config.json": "/.pre-commit-config.yaml",
            "https://json.schemastore.org/docker-compose.json": [
              "/docker-compose*.yml",
              "/docker-compose*.yaml"
            ]
          }
        }
      }
    },
    "jdtls": {
      "command": ["jdtls"],
      "extensions": [".java"],
      "initialization": {
        "java": {
          "configuration": {
            "updateBuildConfiguration": "automatic"
          },
          "completion": {
            "enabled": true,
            "guessMethodArguments": true
          },
          "saveActions": {
            "organizeImports": true
          }
        }
      }
    }
  },
  "permission": {
    "edit": "allow",
    "bash": {
      "ls": "allow",
      "ls -l": "allow",
      "ls -la": "allow",
      "tree": "allow",
      "cat": "allow",
      "head": "allow",
      "tail": "allow",
      "less": "allow",
      "more": "allow",
      "git status": "allow",
      "git diff": "allow",
      "git log": "allow",
      "git branch": "allow",
      "git remote -v": "allow",
      "uname -a": "allow",
      "df -h": "allow",
      "ps aux": "allow",
      "env": "allow",
      "uptime": "allow",
      "ping": "allow",
      "ifconfig": "allow",
      "netstat -an": "allow",
      "which": "allow",
      "whereis": "allow",
      "history": "allow",
      "uvx": "allow",
      "uvx --from git+https://github.com/github/spec-kit.git*": "allow"
    }
  },
  "$schema": "https://opencode.ai/config.json"
}
