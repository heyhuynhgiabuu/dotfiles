{
  "$schema": "https://opencode.ai/config.json",
  "instructions": [
    "opencode/protocols/unified-context-protocol.md",
    "opencode/protocols/workflow-protocol.md",
    "opencode/protocols/shared-schemas-protocol.md",
    "opencode/protocols/security-handling-protocol.md",
    "opencode/protocols/agent-specialization-enhanced.md",
    "opencode/protocols/core-foundations-protocol.md",
    "opencode/protocols/intelligence-protocols.md"
  ],
  "permission": {
    "edit": "ask",
    "bash": {
      "ls": "allow",
      "ls -l": "allow",
      "ls -la": "allow",
      "tree": "allow",
      "cat": "allow",
      "head": "allow",
      "tail": "allow",
      "less": "allow",
      "more": "allow",
      "git status": "allow",
      "git diff": "allow",
      "git log": "allow",
      "git branch": "allow",
      "git remote -v": "allow",
      "uname -a": "allow",
      "df -h": "allow",
      "ps aux": "allow",
      "env": "allow",
      "uptime": "allow",
      "ping": "allow",
      "ifconfig": "allow",
      "netstat -an": "allow",
      "which": "allow",
      "whereis": "allow",
      "history": "allow"
    }
  },
  "agent": {
    "delta": {
      "description": "Primary agent for deep analysis, architecture decisions, and intelligent workflow orchestration with advanced reasoning capabilities",
      "mode": "primary",
      "model": "opencode/sonic",
      "temperature": 0.15,
      "thinking": {
        "type": "enabled",
        "budget_tokens": 4000
      },
      "prompt": "{file:./prompts/delta-prompt.md}",
      "capabilities": {
        "context_optimization": true,
        "workflow_orchestration": true,
        "security_analysis": true,
        "advanced_reasoning": true,
        "agent_collaboration": true,
        "chrome_mcp_integration": true,
        "context_rot_management": true
      },
      "specialization": {
        "primary_domains": [
          "architecture",
          "analysis",
          "workflow_management",
          "context_optimization"
        ],
        "cognitive_capabilities": {
          "problem_solving": "expert",
          "creativity": "high",
          "learning_ability": "expert",
          "communication": "expert"
        },
        "operational_capabilities": {
          "task_management": "expert",
          "error_handling": "expert",
          "performance_optimization": "high",
          "quality_assurance": "expert"
        }
      }
    },
    "beta": {
      "description": "Beta agent for testing new features",
      "mode": "primary",
      "model": "github-copilot/claude-sonnet-4",
      "temperature": 0.15,
      "thinking": {
        "type": "enabled",
        "budget_tokens": 4000
      },
      "prompt": "{file:./prompts/beta-prompt.md}"
    },
    "build": {
      "description": "Build agent for compiling and packaging code",
      "mode": "primary",
      "model": "github-copilot/gpt-5",
      "temperature": 0.1,
      "max_tokens": 3200,
      "prompt": "{file:./prompts/build-prompt.md}"
    },
    "plan": {
      "description": "Plan agent for project planning and task management",
      "model": "opencode/sonic",
      "mode": "primary",
      "temperature": 0.2,
      "max_tokens": 1400,
      "prompt": "{file:./prompts/plan-prompt.md}",
      "tools": {
        "write": false,
        "edit": false,
        "bash": false
      }
    }
  },
  "mcp": {
    "context7": {
      "type": "local",
      "command": ["npx", "-y", "@upstash/context7-mcp@latest"],
      "enabled": true,
      "environment": { "DEFAULT_MINIMUM_TOKENS": "2000" }
    },
    "serena": {
      "type": "local",
      "command": [
        "uvx",
        "--from",
        "git+https://github.com/oraios/serena",
        "serena-mcp-server",
        "--context",
        "ide-assistant"
      ],
      "enabled": true,
      "environment": { "SERENA_READ_ONLY": "true" }
    },
    "figma": {
      "type": "local",
      "command": [
        "npx",
        "-y",
        "figma-developer-mcp",
        "{env:FIGMA_API_KEY}",
        "--stdio"
      ],
      "enabled": true
    },
    "chrome": {
      "type": "local",
      "command": [
        "node",
        "/Users/killerkidbo/.nvm/versions/node/v22.14.0/lib/node_modules/mcp-chrome-bridge/dist/mcp/mcp-server-stdio.js"
      ],
      "enabled": true
    }
  },
  "keybinds": {
    "leader": "ctrl+x",
    "app_help": "<leader>h",
    "app_exit": "ctrl+c,<leader>q",
    "editor_open": "<leader>e",
    "theme_list": "<leader>t",
    "project_init": "<leader>i",
    "tool_details": "<leader>d",
    "thinking_blocks": "<leader>b",
    "session_export": "<leader>x",
    "session_new": "<leader>n",
    "session_list": "<leader>l",
    "session_share": "<leader>s",
    "session_unshare": "none",
    "session_interrupt": "esc",
    "session_compact": "<leader>c",
    "session_child_cycle": "ctrl+]",
    "session_child_cycle_reverse": "ctrl+\\",
    "messages_page_up": "pgup",
    "messages_page_down": "pgdown",
    "messages_half_page_up": "ctrl+alt+u",
    "messages_half_page_down": "ctrl+alt+d",
    "messages_first": "ctrl+g",
    "messages_last": "ctrl+alt+g",
    "messages_copy": "<leader>y",
    "messages_undo": "<leader>u",
    "messages_redo": "<leader>r",
    "model_list": "<leader>m",
    "model_cycle_recent": "f2",
    "model_cycle_recent_reverse": "shift+f2",
    "agent_list": "<leader>a",
    "agent_cycle": "tab",
    "agent_cycle_reverse": "shift+tab",
    "input_clear": "ctrl+c",
    "input_paste": "ctrl+v",
    "input_submit": "enter",
    "input_newline": "shift+enter,ctrl+j"
  },
  "theme": "kanagawa",
  "model": "github-copilot/claude-sonnet-4",
  "share": "disabled",
  "autoupdate": true,
  "tui": {
    "scroll_speed": 3
  }
}
