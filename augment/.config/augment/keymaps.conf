# AugmentCode Keymaps Configuration  
# Single AI solution - clean, conflict-free setup
# Source: https://raw.githubusercontent.com/augmentcode/augment.vim/main/doc/augment.txt

# === OFFICIAL COMMANDS ===

# Chat commands (official)
map_chat_send="<leader>ac"           # :Augment chat [message]
map_chat_new="<leader>an"            # :Augment chat-new  
map_chat_toggle="<leader>at"         # :Augment chat-toggle

# Status and management (official)
map_status="<leader>as"              # :Augment status
map_log="<leader>al"                 # :Augment log

# Authentication (official)
map_signin="<leader>ai"              # :Augment signin
map_signout="<leader>ao"             # :Augment signout

# Completion controls (official variables, not commands)
map_enable_completions="<leader>ae"  # Set g:augment_disable_completions = false
map_disable_completions="<leader>ad" # Set g:augment_disable_completions = true

# === CLEAN COMPLETION ACCEPTANCE (No Conflicts!) ===
# GitHub Copilot removed - AugmentCode is now the primary AI

# Primary acceptance keys (safe and official)
map_accept_primary="<Tab>"           # Default Tab acceptance (official)
map_accept_secondary="<C-l>"         # Ctrl-L (now available since Copilot removed)
map_accept_fallback="<C-y>"          # Ctrl-Y (standard vim accept key)

# NO MORE CONFLICTS:
# ✅ Tab works perfectly with nvim-cmp coexistence
# ✅ Ctrl-L is now free (Copilot removed)
# ✅ No AeroSpace conflicts (no Alt keys)
# ✅ No WezTerm conflicts (no Cmd keys)
# ✅ No dual-AI competition

# Tab mapping enabled for primary AI experience
tab_mapping_disabled=false          # g:augment_disable_tab_mapping = false

# Workspace management (utility)
map_workspace_status="<leader>aw"    # Show workspace info

# Visual mode - chat works in visual mode too (official)
vmap_chat_about_selection="<leader>ac"  # :Augment chat with selection

# === SINGLE AI STRATEGY ===
# AugmentCode: Primary AI for BOTH completions AND chat
# - Tab: Primary acceptance (official, fast)
# - Ctrl-L: Alternative acceptance (familiar from other editors)
# - Ctrl-Y: Fallback option (standard vim)
# - <leader>ac: Chat interface for complex requests

# === HIGHLIGHTING CONFIG ===
# From *augment-highlighting* section - configured via autocmd in plugin
# Highlight group: AugmentSuggestionHighlight
# - Foreground: #7dc4e4 (nice blue for primary AI)
# - Terminal: ctermfg=12
# - Style: italic
# - Auto-updates with colorscheme changes

# === OFFICIAL OPTIONS REFERENCE ===
# g:augment_disable_tab_mapping=false # Tab works as primary acceptance
# g:augment_disable_completions       # Control completions on/off
# g:augment_workspace_folders         # Set workspace directories
# g:augment_suppress_version_warning  # Suppress version warnings
# g:augment_node_command              # Custom Node.js executable

# === USAGE NOTES ===
# - Tab is the primary acceptance key (fast, natural)
# - Ctrl-L provides alternative (familiar from other tools)
# - Ctrl-Y is a standard vim fallback
# - All chat commands work in both normal and visual mode
# - Single AI solution eliminates ALL conflicts
# - Clean, simple, fast development experience